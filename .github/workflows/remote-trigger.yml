name: e2e-remote-trigger-tests
on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
    secrets:
      service-account-token:
        required: true

jobs:
  e2e-system-tests:
    runs-on: ubuntu-latest
    outputs:
      cypress_brb: ${{ steps.set_target.outputs.CYPRESS_BRB }}
      cypress_nbc: ${{ steps.set_target.outputs.CYPRESS_NBC }}
      cypress_default: ${{ steps.set_target.outputs.CYPRESS_DEFAULT }}
      tag: ${{ steps.set_target.outputs.tag }}
      environment: ${{ steps.set_target.outputs.environment }}

    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: check local branch
        id: check_branch
        run: |
          check_cypress_branch=$(git ls-remote --heads "https://github.com/hpi-schul-cloud/e2e-system-tests.git" ${{ inputs.ref }})
          if [[ -z ${check_cypress_branch} ]]; then
            echo "LOCAL_BRANCH_EXISTS=false" >> "$GITHUB_OUTPUT"
          else
            echo "LOCAL_BRANCH_EXISTS=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout main
        if: steps.check_branch.outputs.LOCAL_BRANCH_EXISTS == 'false'
        uses: actions/checkout@v3
        with:
          repository: hpi-schul-cloud/e2e-system-tests
          path: e2e-system-tests

      - name: Checkout branch
        if: steps.check_branch.outputs.LOCAL_BRANCH_EXISTS == 'true'
        uses: actions/checkout@v3
        with:
          repository: hpi-schul-cloud/e2e-system-tests
          ref: ${{ inputs.ref }}
          path: e2e-system-tests

      - name: Set target
        id: set_target
        shell: bash
        run: |
          branch_name=${{ inputs.ref }}
          echo "input branch name: $branch_name"

          # This cleaning of the branch name needs to be done the same way as in deployment.
          # Currently done in https://github.com/hpi-schul-cloud/dof_app_deploy/blob/main/.github/workflows/clean_workflow.yml
          cleaned_branch_name=$(echo $branch_name | sed 's@.*/@@' | tr [A-Z] [a-z] | tr _ - | tr \. -)
          echo "cleaned branch name: $cleaned_branch_name"

          echo "CYPRESS_BRB=https://brb-${cleaned_branch_name}.cd.dbildungscloud.dev" >> $GITHUB_OUTPUT
          echo "Set CYPRESS_BRB=https://brb-${cleaned_branch_name}.cd.dbildungscloud.dev"

          echo "CYPRESS_NBC=https://nbc-${cleaned_branch_name}.cd.dbildungscloud.dev" >> $GITHUB_OUTPUT
          echo "Set CYPRESS_NBC=https://nbc-${cleaned_branch_name}.cd.dbildungscloud.dev"

          echo "CYPRESS_DEFAULT=https://default-${cleaned_branch_name}.cd.dbildungscloud.dev" >> $GITHUB_OUTPUT
          echo "Set CYPRESS_DEFAULT=https://default-${cleaned_branch_name}.cd.dbildungscloud.dev"

          if [[ ! $CYPRESS_BRB =~ (staging|schulportal) && ! $CYPRESS_DEFAULT =~ (staging|schulportal) && ! $CYPRESS_NBC =~ (staging|schulportal) ]]; then
              environment="dev"
          else
              environment="ref"
          fi

          echo "tag=tag:stable:pr:ci" >> $GITHUB_OUTPUT
          echo "environment=$environment" >> $GITHUB_OUTPUT

      - name: Check if all apps are running
        shell: bash
        run: |
          check_availability () {
            delay=10
            max_tries=30
            tries=0

            until [ $tries -ge $max_tries ] || curl -sf $1 | jq '."services-unavailable"' | grep false > /dev/null; do
              echo "$1 says apps are not running. Try again in $delay seconds."
              tries=$((tries+1))
              sleep $delay
            done

            if [ $tries -ge $max_tries ]; then
              echo "Terminated checking $1 after $tries tries without success."
              echo "Exit job."
              exit 1
            else
              echo "$1 says apps are running."
            fi
          }

          check_availability ${{ steps.set_target.outputs.cypress_brb }}/version
          check_availability ${{ steps.set_target.outputs.cypress_nbc }}/version
          check_availability ${{ steps.set_target.outputs.cypress_default }}/version

  configuring-loading-secrets-running-tests:
    needs: e2e-system-tests
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.service-account-token }}
    with:
      cypress_brb: ${{ needs.e2e-system-tests.outputs.cypress_brb }}
      cypress_nbc: ${{ needs.e2e-system-tests.outputs.cypress_nbc }}
      cypress_default: ${{ needs.e2e-system-tests.outputs.cypress_default }}
      tag: ${{ needs.e2e-system-tests.outputs.tag }}
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
