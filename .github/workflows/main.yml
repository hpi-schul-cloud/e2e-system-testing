name: configure, load secrets, run Cypress tests, generate and upload reports
on:
  workflow_call:
    secrets:
      service-account-token:
        required: true
    inputs:
      cypress_brb:
        description: "brb url from remote workflow"
        type: string
      cypress_nbc:
        description: "nbc url from remote workflow"
        type: string
      cypress_default:
        description: "default url from remote workflow"
        type: string
      tag:
        description: "tag for running cypress tests"
        type: string
      environment:
        description: "environment for retriving credentials from 1Password vault"
        type: string

jobs:
  configure-load-secrets-and-run_tests:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.read_variables.outputs.TAG }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: hpi-schul-cloud/e2e-system-tests
          path: e2e-system-tests

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@v1

      - name: Verify 1Password was Installed
        run: op --version

      - name: Configure 1Password Service Account
        uses: 1password/load-secrets-action/configure@v1
        with:
          service-account-token: ${{ secrets.service-account-token }}

      - name: Fetch JSON files from 1Password
        run: |
          instances=(brb dbc nbc)
          environments=(dev ref)

          for instance in "${instances[@]}"; do
            # for environment in "${environments[@]}"; do
              vault_name="cy-${{inputs.environment}}-${instance}"
              op document get cypress-json --vault "$vault_name" --output ${{ github.workspace }}/e2e-system-tests/env_variables/file-${{inputs.environment}}-${instance}.json
            # done
          done

      - name: Aggregate JSON Data into one File
        id: read_variables
        run: |
          workflow=${{ github.workflow }}
          workspace_path=${{ github.workspace }}

          # if [[ $workflow == *"manual"* ]]; then
          #   brb_instance=${{ github.event.inputs.instance1 }}
          #   dbc_instance=${{ github.event.inputs.instance2 }}
          #   nbc_instance=${{ github.event.inputs.instance3 }}
          # elif [[ $workflow == *"automatic"* || $workflow == *"scheduled"* ]]; then
          #   brb_instance=""
          #   dbc_instance=""
          #   nbc_instance=""
          # else
          #   brb_instance=${{ inputs.cypress_brb }}
          #   dbc_instance=${{ inputs.cypress_default }}
          #   nbc_instance=${{ inputs.cypress_nbc }}
          # fi

          chmod +x ${{ github.workspace }}/e2e-system-tests/scripts/aggregate-json-files.sh
          ${{ github.workspace }}/e2e-system-tests/scripts/aggregate-json-files.sh \
            "${workflow}" \
            "${{inputs.cypress_brb}}" \
            "${{inputs.cypress_default}}" \
            "${{inputs.cypress_nbc}}" \
            "${workspace_path}" \
            "${{inputs.environment}}"

      - name: Clean up previous report
        uses: cypress-io/github-action@v5
        with:
          working-directory: e2e-system-tests
          command: npm run pretest

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: e2e-system-tests
          command: npm run ${{ inputs.tag }}
          browser: chrome

      - name: Generate Report
        if: always()
        working-directory: e2e-system-tests
        run: |
          npm run generate:report

      - name: Upload Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: my-report
          path: ${{ github.workspace }}/e2e-system-tests/reports/

      - name: Upload Video Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: my-video-artifact
          path: ${{ github.workspace }}/e2e-system-tests/cypress/videos/
          retention-days: 3
