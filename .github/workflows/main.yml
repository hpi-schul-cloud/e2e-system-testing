name: configure, load secrets, run Cypress tests, generate and upload reports
on:
  workflow_call:
    secrets:
      service-account-token:
        required: true
    inputs:
      cypress_brb:
        description: "brb url from remote workflow"
        type: string
      cypress_nbc:
        description: "nbc url from remote workflow"
        type: string
      cypress_default:
        description: "default url from remote workflow"
        type: string

jobs:
  configure-load-secrets-and-run_tests:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.read_variables.outputs.TAG }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: hpi-schul-cloud/e2e-system-tests
          path: e2e-system-tests

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@v1

      - name: Verify 1Password was Installed
        run: op --version

      - name: Configure 1Password Service Account
        uses: 1password/load-secrets-action/configure@v1
        with:
          service-account-token: ${{ secrets.service-account-token }}

      - name: Fetch JSON files from 1Password
        run: |
          instances=(brb dbc nbc)
          environments=(dev ref)

          for instance in "${instances[@]}"; do
            for environment in "${environments[@]}"; do
              vault_name="cy-${environment}-${instance}"
              op document get cypress-json --vault "$vault_name" --output ${{ github.workspace }}/e2e-system-tests/env_variables/file-${environment}-${instance}.json
            done
          done

      - name: Read JSON files and set environment variables
        id: read_variables
        run: |
          instances=(brb dbc nbc)
          environments=(dev ref)

          workflow_name="${{ github.workflow }}"
          if [[ $workflow_name == *"manual"* ]]; then
            echo "This is a manual workflow"
            check_cypress_brb=$(grep -oE "staging|schulportal" <<< "${{ github.event.inputs.instance1 }}")
            check_cypress_default=$(grep -oE "staging|schulportal" <<< "${{ github.event.inputs.instance2 }}")
            check_cypress_nbc=$(grep -oE "staging|schulportal" <<< "${{ github.event.inputs.instance3 }}")
            echo "TAG=tag:stable:ci" >> $GITHUB_OUTPUT
            echo "$TAG"
          elif [[ $workflow_name == *"automatic"* || $workflow_name == *"scheduled"* ]]; then
            echo "This is an automatic or scheduled workflow"
            check_cypress_brb=""
            check_cypress_default=""
            check_cypress_nbc=""
            echo "TAG=tag:stable:ci" >> $GITHUB_OUTPUT
            echo "$TAG"
          else
            echo "This is a remote workflow"
            check_cypress_brb=$(grep -oE "staging|schulportal" <<< "${{ inputs.cypress_brb }}")
            check_cypress_default=$(grep -oE "staging|schulportal" <<< "${{ inputs.cypress_default }}")
            check_cypress_nbc=$(grep -oE "staging|schulportal" <<< "${{ inputs.cypress_nbc }}")
            echo "TAG=tag:stable:pr:ci" >> $GITHUB_OUTPUT
            echo "$TAG"
          fi

          if [[ ! -z "$check_cypress_brb" || ! -z "$check_cypress_default" || ! -z "$check_cypress_nbc" ]]; then
            environment="ref"
          else
            environment="dev"
          fi

          file_paths=()
          declare -A key_value_pairs

          for instance in "${instances[@]}"; do
            if [[ $workflow_name == *"manual"* || $workflow_name == *"remote"* ]]; then
              file_path="${{ github.workspace }}/e2e-system-tests/env_variables/file-${environment}-${instance}.json"
            else
              file_path="${{ github.workspace }}/e2e-system-tests/env_variables/file-dev-${instance}.json"
            fi

            file_paths+=("$file_path")

            result=$(jq -c . < "$file_path")
            if [ $? -eq 0 ]; then
                key_value_pairs+=($(jq -c '. | to_entries | .[]' < "$file_path"))
            else
                echo "Error reading JSON file: $file_path"
                cat "$file_path"
                exit 1
            fi

            # while IFS="=" read -r key value; do
            #     key_value_pairs["$key"]=$value
            # done < <(jq -r 'to_entries | .[] | "\(.key)=\(.value)"' "$file_path")
          done

          json_output=$(jq -n -c 'reduce inputs as $item ({}; . * $item)')

          # json_output="{"
          # for key in "${!key_value_pairs[@]}"; do
          #     json_output+="\"$key\":\"${key_value_pairs[$key]}\","
          # done
          # json_output="${json_output%,}"
          # json_output+="}"

          if [ $? -eq 0 ]; then
              # Write JSON output to file if successful
              echo "$json_output" > "${{ github.workspace }}/e2e-system-tests/env_variables/combined_credentials.json"
          else
              echo "Error occurred during JSON concatenation."
              # Print the merged JSON content
              echo "$json_output"
              exit 1
          fi

      - name: Clean up previous report
        uses: cypress-io/github-action@v5
        with:
          working-directory: e2e-system-tests
          command: npm run pretest

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: e2e-system-tests
          command: npm run ${{ steps.read_variables.outputs.tag }}
          browser: chrome

      - name: Generate Report
        if: always()
        working-directory: e2e-system-tests
        run: |
          npm run generate:report

      - name: Upload Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: my-report
          path: ${{ github.workspace }}/e2e-system-tests/reports/

      - name: Upload Video Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: my-video-artifact
          path: ${{ github.workspace }}/e2e-system-tests/cypress/videos/
          retention-days: 3
